{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "title: \"Semana 9: Machine Learning\"\n",
        "author: \"Jorge Iván Romero Gelvez\"\n",
        "format:\n",
        "  revealjs:\n",
        "    transition: slide\n",
        "    logo: arcos_19.jpg\n",
        "    footer: \"INTELIGENCIA ARTIFICIAL (702304-1-1S-2025)\"\n",
        "    chalkboard: true\n",
        "    bibliography: references.bib\n",
        "jupyter: python3\n",
        "---\n",
        "\n",
        "\n",
        "# Introducción al Machine Learning\n",
        "\n",
        "\n",
        "## Objetivos de aprendizaje\n",
        "- Definir el aprendizaje automático\n",
        "- Definir el aprendizaje supervisado\n",
        "- Definir el aprendizaje no supervisado\n",
        "- Definir un modelo de regresión\n",
        "- Definir un modelo de clasificación\n",
        "\n",
        "\n",
        "\n",
        "## ¿Que es el aprendizaje automático?\n",
        "::: {.fragment .blur}\n",
        "> \"El aprendizaje automático es el campo de estudio que otorga a las computadoras la capacidad de aprender sin ser programadas explícitamente.\"\n",
        "\n",
        "-- *Arthur Samuel, 1959* [@samuel1959]\n",
        ":::\n",
        "::: {.fragment .columns .center}\n",
        "::: {.column width=\"50%\"}\n",
        "![Arthur Samuel y su programa de damas](https://i.blogs.es/589df8/650_1000_us__en_us__ibm100__700_series__checkers__620x350/1366_2000.webp)\n",
        ":::\n",
        ":::\n",
        "\n",
        "##  Definición de Aprendizaje Automático\n",
        "\n",
        "> \"El aprendizaje automático es un campo de la inteligencia artificial que permite a las computadoras aprender de los datos sin ser programadas explícitamente. Según *Artificial Intelligence: A Modern Approach* de Russell y Norvig, el aprendizaje automático es fundamental en el desarrollo de sistemas autónomos e inteligentes. Por otro lado, *An Introduction to Statistical Learning* enfatiza la importancia de los modelos estadísticos en la inferencia y predicción.\" [@russell2010; @james2013]\n",
        "\n",
        "## Casos de Uso en Aprendizaje Automático {background-iframe=\"https://insights.daffodilsw.com/blog/machine-learning-examples-from-day-to-day-life\"}\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "## Tipos de aprendizaje automático\n",
        "\n",
        "- Aprendizaje supervizado\n",
        "- Aprendizaje no supervizado\n",
        "- Aprendizaje por refuerzo\n",
        " \n",
        "## Ejemplos de Aplicaciones de Aprendizaje Automático {.scrollable}\n",
        "\n",
        "| **Entrada (X)**             | **Salida (Y)**                     | **Aplicación**             |\n",
        "|-----------------------------|-----------------------------------|----------------------------|\n",
        "| correo electrónico          | ¿spam? (0/1)                      | filtrado de spam          |\n",
        "| audio                       | transcripción de texto           | reconocimiento de voz      |\n",
        "| inglés                      | español                           | traducción automática      |\n",
        "| anuncio, información del usuario | ¿clic? (0/1)               | publicidad en línea       |\n",
        "| imagen, información de radar | posición de otros autos         | conducción autónoma       |\n",
        "| imagen de un teléfono       | ¿defecto? (0/1)                  | inspección visual         |\n",
        "\n",
        "## Predicción de Precios de Vivienda{.scrollable}\n",
        "![Ejemplo casas](casas.png)\n",
        "\n",
        "::: {.fragment .columns .center}\n",
        "- **Regresión Lineal**: Ajusta una línea recta para modelar la relación entre el tamaño de la casa y su precio.\n",
        ":::\n",
        "::: {.fragment .columns .center}\n",
        "- **Regresión Polinomial**: Ajusta una curva más compleja para capturar relaciones no lineales en los datos.\n",
        "::: \n",
        "\n",
        "\n",
        "\n",
        "## Comparación de Modelos\n",
        "\n",
        "| **Modelo**             | **Descripción**                                              | **Ventajas**                                         | **Desventajas**                                      |\n",
        "|------------------------|--------------------------------------------------------------|------------------------------------------------------|------------------------------------------------------|\n",
        "| Regresión Lineal       | Ajusta una línea recta a los datos                           | Simple, fácil de interpretar                        | No captura relaciones no lineales                    |\n",
        "| Regresión Polinomial   | Ajusta una curva polinómica para una mejor aproximación     | Captura relaciones más complejas                    | Puede sobreajustar si el grado del polinomio es alto |\n",
        "\n",
        "---\n",
        "\n",
        "# Regresión Lineal con una Variable{: .scrollable .center}\n",
        "\n",
        "Según *An Introduction to Statistical Learning*, la regresión lineal es el modelo base en Machine Learning y se define como:\n",
        "\n",
        "$$ f_{w,b}(x) = wx + b $$\n",
        "\n",
        "\n",
        "```{mermaid}\n",
        "graph LR;\n",
        "  X[Entrada: Tamaño de casa] -->|Modelo| Y[Salida: Precio de casa];\n",
        "```\n",
        "\n",
        "\n",
        "## Implementación en Python"
      ],
      "id": "4b14581e"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "from sklearn.linear_model import LinearRegression\n",
        "\n",
        "X = np.array([[400], [2104], [1416], [1534], [852]])\n",
        "y = np.array([232, 460, 315, 178, 232])\n",
        "\n",
        "model = LinearRegression()\n",
        "model.fit(X, y)\n",
        "\n",
        "plt.scatter(X, y, color=\"blue\", label=\"Datos reales\")\n",
        "plt.plot(X, model.predict(X), color=\"red\", label=\"Regresión lineal\")\n",
        "plt.xlabel(\"Tamaño de la casa (pies cuadrados)\")\n",
        "plt.ylabel(\"Precio ($1000s)\")\n",
        "plt.legend()\n",
        "plt.show()"
      ],
      "id": "02fac481",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "##\n",
        "<iframe src=\"https://docs.google.com/presentation/d/e/2PACX-1vQbDzDaUKWNk6UrIcNL1ynwNzzflWLw7-IUVW-KUpKwzn9kAEdU7lsL39xUE2mweVRkwT3VIYM6-79E/embed?start=false&loop=false&delayms=3000\" frameborder=\"0\" width=\"960\" height=\"569\" allowfullscreen=\"true\" mozallowfullscreen=\"true\" webkitallowfullscreen=\"true\"></iframe>\n",
        "\n",
        "##\n",
        "<iframe src=\"https://docs.google.com/presentation/d/e/2PACX-1vTLSPU3eZh-rEdd6IrkFMVrhGIaH9AKdpWLEj-f-NdyaSWDrmFuaOttLKWq7vExfMqGk-v5jz2FYx_L/embed?start=false&loop=false&delayms=3000\" frameborder=\"0\" width=\"960\" height=\"569\" allowfullscreen=\"true\" mozallowfullscreen=\"true\" webkitallowfullscreen=\"true\"></iframe>\n",
        "\n",
        "\n",
        "\n",
        "## Regresión Lineal con Múltiples Variables\n",
        "\n",
        "La regresión lineal con múltiples variables se expresa como:\n",
        "\n",
        "$$ f_{w,b}(x) = w_1x_1 + w_2x_2 + \\dots + w_nx_n + b $$\n",
        "\n",
        "\n",
        "```{mermaid}\n",
        "graph LR;\n",
        "  X1[Superficie] -->|Modelo| Y[Precio];\n",
        "  X2[Número de habitaciones] -->|Modelo| Y;\n",
        "  X3[Antigüedad] -->|Modelo| Y;\n",
        "```\n",
        "\n",
        "\n",
        "## Implementación en Python"
      ],
      "id": "efcf8442"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "X_multi = np.array([[2104, 5, 1, 45], [1416, 3, 2, 40], [1534, 3, 2, 30], [852, 2, 1, 36]])\n",
        "y_multi = np.array([460, 232, 315, 178])\n",
        "\n",
        "model_multi = LinearRegression()\n",
        "model_multi.fit(X_multi, y_multi)\n",
        "\n",
        "print(\"Coeficientes:\", model_multi.coef_)\n",
        "print(\"Intercepto:\", model_multi.intercept_)"
      ],
      "id": "9581375b",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "## Clasificación con Regresión Logística\n",
        "\n",
        "Russell y Norvig destacan la regresión logística como una técnica clave en inteligencia artificial. Su ecuación es:\n",
        "\n",
        "$$ g(z) = \\frac{1}{1+e^{-z}} $$\n",
        "\n",
        "\n",
        "```{mermaid}\n",
        "graph LR;\n",
        "  A[Entrada: Característica] -->|Función Sigmoide| B[Probabilidad];\n",
        "  B -->|Si P mayor que 0.5| C[Clase 1];\n",
        "  B -->|Si P menor que 0.5| D[Clase 0];\n",
        "```\n",
        "\n",
        "\n",
        "\n",
        "## Regularización en Machine Learning\n",
        "\n",
        "Para evitar sobreajuste, *An Introduction to Statistical Learning* recomienda:\n",
        "\n",
        "- **L1 (Lasso)**: Reduce coeficientes a cero, favoreciendo la selección de características.\n",
        "- **L2 (Ridge)**: Disminuye la varianza del modelo penalizando coeficientes grandes.\n",
        "\n",
        "## Regresión Ridge vs. Lasso\n",
        "\n",
        "- **Regresión Ridge (L2 Regularización)**: Reduce los coeficientes pero nunca los hace exactamente **cero**.\n",
        "- **Regresión Lasso (L1 Regularización)**: Puede hacer que algunos coeficientes sean exactamente **cero**, eliminando características irrelevantes.\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "## Diferencias Clave\n",
        "\n",
        "| **Característica**  | **Regresión Ridge** | **Regresión Lasso** |\n",
        "|---------------------|--------------------|---------------------|\n",
        "| **Tipo de Regularización** | L2 (\\(\\sum \\beta^2\\)) | L1 (\\(\\sum |\\beta|\\)) |\n",
        "| **Coeficientes pueden ser 0** | ❌ No | ✅ Sí (selección de variables) |\n",
        "| **Evita sobreajuste** | ✅ Sí | ✅ Sí, pero con selección de características |\n",
        "| **Útil cuando...** | Todas las variables son relevantes | Algunas variables pueden ser eliminadas |\n",
        "\n",
        "---\n",
        "\n",
        "## Cuando usar cada una\n",
        "\n",
        "- **Ridge** se usa cuando queremos reducir la magnitud de los coeficientes sin eliminarlos.\n",
        "- **Lasso** es útil cuando queremos una selección automática de características eliminando coeficientes irrelevantes.\n",
        "\n",
        "\n",
        "## referencias\n"
      ],
      "id": "5ad63959"
    }
  ],
  "metadata": {
    "kernelspec": {
      "name": "python3",
      "language": "python",
      "display_name": "Python 3 (ipykernel)",
      "path": "/opt/anaconda3/envs/jorge/share/jupyter/kernels/python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}